{"version":3,"sources":["redux/noticeSlice.js","components/MovieTheater/Seat.module.css","components/Paper/Paper.jsx","components/AppBar/AppBar.jsx","components/Card/Card.jsx","components/MovieCard/MovieCard.jsx","api/config.js","api/createRequest.js","api/fetchMovies.js","api/fetchMovie.js","api/bookTickets.js","api/getUserTickets.js","redux/movieSlice.js","components/MovieList/MovieList.jsx","redux/userSlice.js","components/User/User.jsx","components/MovieTheater/Seat.jsx","components/MovieTheater/MovieTheater.jsx","components/TicketList/TicketList.jsx","App.js","redux/store.js","serviceWorker.js","index.js"],"names":["noticeSlice","createSlice","name","initialState","error","warning","info","reducers","state","action","payload","dismissError","dismissInfo","actions","selectError","noticeService","selectInfo","module","exports","Paper","props","style","className","children","elevation","onClick","rootCls","classnames","AppBar","paperProps","Card","imageUrl","others","classNames","backgroundImage","MovieCard","movie","history","useHistory","e","push","id","poster","title","description","cast","director","runtime","enviroment","process","REACT_APP_ENV","protocol","host","config","path","createRequest","option","startsWith","slice","base","url","fetch","then","response","a","ok","json","errorResponse","Promise","reject","message","data","fetchMovies","fetchMovie","movieId","bookTickets","slotId","userId","seatIds","method","body","JSON","stringify","headers","getUserTickets","fetchAllMovies","createAsyncThunk","fetchMovieById","refresh","getState","selectMovie","movieSlice","movies","status","updateSeatAvailability","tickets","ticket","find","m","slots","s","slot","seats","seat","availability","extraReducers","builder","addCase","pending","fulfilled","rejected","found","findIndex","splice","selectMovies","movieService","selectMovieStatus","MovieList","useSelector","dispatch","useDispatch","useEffect","unwrap","length","catch","map","user","sessionStorage","getItem","details","parse","loaded","userBookTickets","getTickets","userSlice","signIn","setItem","signOut","clear","addTickets","t","selectUser","selectUserTickets","selectStatus","selectIsLoaded","LoggedInUser","pathname","useLocation","useState","showMenu","setShowMenu","menuCls","hidden","color","SignInUser","User","Seat","selected","disabled","onToggle","Styled","available","stopPropagation","MovieTheater","useParams","userStatus","seatSelected","setSeatSelected","dateSelected","setDateSelected","timeSelected","setTimeSelected","timeOptions","setTimeOptions","seatOptions","setSeatOptions","total","setTotal","reduce","acc","date","endTime","err","dates","Object","keys","times","time","timeToSelect","_slot","proceedBtnCls","loginReminderCls","subTitleCls","onChange","target","value","opt","args","alert","finally","indexOf","price","handleSeatToggle","number","TicketList","startTime","hall","Notice","React","lazy","Logo","App","to","fallback","store","configureStore","reducer","userReducer","movieReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa093860.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  error: null,\r\n\twarning: null,\r\n\tinfo: null\r\n};\r\n\r\nexport const noticeSlice = createSlice({\r\n  name: 'noticeService',\r\n  initialState,\r\n  reducers: {\r\n    // set an error\r\n    error: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n    // dismiss an error\r\n    dismissError: (state) => {\r\n      state.error = null;\r\n    },\r\n    info: (state, action) => {\r\n      state.info = action.payload;\r\n    },\r\n    dismissInfo: (state, action) => {\r\n      state.info = null;\r\n    }\r\n  },\r\n  \r\n});\r\n\r\nexport const { error, dismissError, info, dismissInfo } = noticeSlice.actions;\r\nexport const selectError = (state) => state.noticeService.error;\r\nexport const selectInfo = (state) => state.noticeService.info;\r\n\r\nexport default noticeSlice.reducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"available\":\"Seat_available__gMd6U\",\"selected\":\"Seat_selected__3tu3N\"};","import classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * UI component Paper\r\n */\r\nexport default function Paper(props){\r\n\r\n\tconst {\r\n\t\tstyle,\r\n\t\tclassName,\r\n\t\tchildren,\r\n\t\televation = 1,\r\n\t\tonClick,\r\n\t} = props;\r\n\r\n\tconst rootCls = classnames( 'paper-default', className, {\r\n\t\t'shadow-sm': elevation === 1,\r\n\t\t'shadow': elevation === 2,\r\n\t\t'shadow-md': elevation === 3,\r\n\t\t'shadow-lg': elevation === 4,\r\n\t\t'shadow-xl': elevation === 5,\r\n\t\t'shadow-2xl': elevation === 6\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div style={style} className={rootCls} onClick={onClick}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nPaper.propTypes = {\r\n\televation: PropTypes.oneOf([1,2,3,4,5,6]),\r\n\tonClick: PropTypes.func,\r\n};","import Paper from \"../Paper\";\r\nimport classnames from 'classnames';\r\n\r\n/**\r\n * UI component - AppBar\r\n */\r\nexport default function AppBar (props) {\r\n\r\n\tconst {\r\n\t\tchildren,\r\n\t\tclassName,\r\n\t\tstyle,\r\n\t\t...paperProps\r\n\t} = props;\r\n\r\n\tconst rootCls = classnames('appBar-default', className);\r\n\r\n\treturn (\r\n\t\t<Paper style={style} className={rootCls} {...paperProps}>\r\n\t\t\t{children}\r\n\t\t</Paper>\r\n\t);\r\n}","import Paper from '../Paper';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Card UI Component\r\n */\r\nexport default function Card (props) {\r\n\r\n\tconst { \r\n\t\tclassName,\r\n\t\tstyle,\r\n\t\timageUrl,\r\n\t\tchildren,\r\n\t\t...others\r\n\t} = props;\r\n\r\n\tconst rootCls = classNames( className );\r\n\r\n\treturn (\r\n\t\t<Paper\r\n\t\t\tclassName={rootCls}\r\n\t\t\tstyle={style}\r\n\t\t\t{...others}\r\n\t\t>\r\n\t\t\t{ imageUrl &&\r\n\t\t\t\t<div \r\n\t\t\t\t\tclassName=\"h-full w-48 flex-none bg-cover rounded-t lg:rounded-t-none lg:rounded-l text-center overflow-hidden\" \r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundImage: `url('${imageUrl}')`\r\n\t\t\t\t\t}}>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{children}\r\n\t\t</Paper>\r\n\t);\r\n}\r\n\r\nCard.propTypes = {\r\n\timageUrl: PropTypes.string\r\n};","import classNames from \"classnames\";\r\nimport { useHistory } from \"react-router\";\r\nimport Card from '../Card';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * UI component MovieCard - to display individual movie\r\n */\r\nexport default function MovieCard (props) {\r\n\r\n\tconst {\r\n\t\tclassName,\r\n\t\tstyle,\r\n\t\tmovie\r\n\t} = props;\r\n\t\r\n\tconst rootCls = classNames( 'movieCard-default', className );\r\n\r\n\tlet history = useHistory();\r\n\tconst handleClick = function(e){\r\n\t\thistory.push(`/movie/${movie.id}`);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card \r\n\t\t\tclassName={rootCls}\r\n\t\t\tstyle={style}\r\n\t\t\tonClick={handleClick}\r\n\t\t\timageUrl={movie.poster}\r\n\t\t>\r\n\t\t\t<div className=\"flex flex-col justify-between p-2 h-full\">\r\n\t\t\t\t<div className=\"flex flex-col\">\r\n\t\t\t\t\t<div className=\"text-gray-900 font-bold text-xl mb-2\">{movie.title}</div>\r\n\t\t\t\t\t<p className=\"text-gray-700 text-lg text-base\">{movie.description}</p>\r\n\t\t\t\t\t<p className=\"text-gray-500 text-sm text-base\">Cast: {movie.cast}</p>\r\n\t\t\t\t\t<p className=\"text-gray-500 text-sm text-base\">Director: {movie.director}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-right\"> {movie.runtime} mins </div>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nMovieCard.propTypes = {\r\n\tmovie: PropTypes.object\r\n};","// common configuration\r\nconst common = {\r\n\tpath: \"/api/v1\",\r\n}\r\n\r\n// development configuration\r\nconst dev = {\r\n\tprotocol: \"http\",\r\n\thost: \"localhost:8080\",\r\n};\r\n\r\n// production configuration\r\nconst prod = {\r\n\tprotocol: \"https\",\r\n\thost: \"murmuring-wildwood-07967.herokuapp.com\",\r\n};\r\n\r\nconst enviroment = process.env.REACT_APP_ENV === 'development' ? dev : prod;\r\n\r\nconst config = {\r\n\t...{\r\n\t\t...common,\r\n\t\t...enviroment\r\n\t}\r\n}\r\n\r\nexport default config;","import config from './config';\r\n\r\n/*\r\n *\tTo standardize request making and error handling for all api fetch\r\n * \t@param {string} path  \r\n *\t@return {Promise}\r\n */\r\nexport default function createRequest(path, option = {}){\r\n\r\n\t// to remove '/' at the beginning if any\r\n\tif(path.startsWith('/')){\r\n\t\tpath = path.slice(1);\r\n\t}\r\n\r\n\tconst base = `${config.protocol}://${config.host}${config.path}`;\r\n\tconst url = `${base}/${path}`;\r\n\r\n\treturn fetch(url,option)\r\n\t\t\t\t\t\t.then( async (response) => {\r\n\t\t\t\t\t\t\tif(response.ok){\r\n\t\t\t\t\t\t\t\treturn response.json();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlet errorResponse = await response.json();\r\n\t\t\t\t\t\t\t\treturn Promise.reject(errorResponse.message)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.then(data => data);\r\n}","import createRequest from './createRequest';\r\n\r\n/**\r\n *\tTo fetch all movies from server\r\n *\t@return {Promise}\r\n */\r\nexport default async function fetchMovies(){\r\n\tlet path = 'movie/all';\r\n\treturn createRequest(path);\r\n}\r\n","import createRequest from './createRequest';\r\n\r\n/**\r\n * To fetch single movie by Id\r\n * \r\n * @param {String} movieId \r\n * @returns {Promise}  \r\n */\r\nexport default function fetchMovie (movieId) {\r\n\tconst path = `movie/${movieId}`;\r\n\treturn createRequest(path);\r\n}","// import config from './config';\r\nimport createRequest from './createRequest';\r\n\r\n/**\r\n * To book ticket(s) for user\r\n *\r\n * @param {string} movieId\r\n * @param {string} slotId\r\n * @param {string} userId\r\n * @param {string[]} seatIds\r\n * @return {Promise}\t\r\n */\r\nexport default function bookTickets(movieId, slotId, userId, seatIds){\r\n\r\n\tconst path = `movie/${movieId}/slot/${slotId}/${userId}`;\r\n\tconst option = {\r\n\t\tmethod: \"POST\",\r\n\t\tbody: JSON.stringify(seatIds),\r\n\t\theaders: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n\t}\r\n\r\n\treturn createRequest(path,option);\r\n\r\n}","import createRequest from './createRequest';\r\n\r\n/**\r\n * to fetch all tickets previously booked by user\r\n * @param {string} userId \r\n * @return {Promise}\r\n */\r\nexport default function getUserTickets (userId){\r\n\tconst path = `ticket/${userId}`;\r\n\treturn createRequest(path);\r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { \r\n\tfetchMovie,\r\n\tfetchMovies \r\n} from '../api';\r\n\r\n// Initial State\r\nconst initialState = {\r\n  // list of movies\r\n  movies: [],\r\n  // status of async action\r\n\tstatus: 'idle',\r\n};\r\n\r\n/**\r\n * An async action to get all movies in db\r\n */\r\nexport const fetchAllMovies = createAsyncThunk(\r\n  'movieService/fetchMovies',\r\n  async () => {\r\n    try{\r\n      // request all movies from remote server\r\n      const response = await fetchMovies();\r\n      return response;\r\n    } catch(error){\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n);\r\n\r\n/**\r\n * An async action to get a movie by id\r\n */\r\nexport const fetchMovieById = createAsyncThunk(\r\n\t'movieService/fetchMovie',\r\n\tasync ({ movieId, refresh = false}, {getState}) => {\r\n    try{\r\n      // try to get movie from current state\r\n      const movie = selectMovie(movieId)(getState());\r\n      // request moive detail from server if movie is not found locally\r\n      if(!movie || refresh){\r\n        // fetchMovie will throw an error when something goes wrong\r\n        const response = await fetchMovie(movieId);\r\n        return response; // should be an movie object\r\n      } else return null; // do nothing if movie requested is found locally\r\n    } catch (error){\r\n      return Promise.reject(error);\r\n    }\r\n\t}\r\n)\r\n\r\n/**\r\n * This handle the states of movie(s), movie's slot & seats for a particular slot\r\n * A movie slot = a movie + a hall + a time \r\n */\r\nexport const movieSlice = createSlice({\r\n  name: 'movieService',\r\n  initialState,\r\n  reducers: {\r\n    // Action to update seat(s) availability (to unavailable) by a list of tickets which were successfully purchased\r\n    // list of tickets are in action.payload\r\n    updateSeatAvailability: (state, action) => {\r\n      const tickets = action.payload;\r\n      for(let ticket of tickets){\r\n        let movie = state.movies.find(m => m.id === ticket.movie.id);\r\n        let slot  = movie.slots.find(s => s.id === ticket.slot.id);\r\n        let seat  = slot.seats.find(s => s.id === ticket.seat.id);\r\n        seat.availability = ticket.seat.availability;\r\n      }\r\n    }\r\n  },\r\n\textraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchAllMovies.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchAllMovies.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.movies = action.payload;\r\n      })\r\n      .addCase(fetchAllMovies.rejected, (state, action) => {\r\n        state.status = 'idle';\r\n      })\r\n\t\t\t.addCase(fetchMovieById.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      // action to add movie to list of movies when requested movie details from server \r\n\t\t\t.addCase(fetchMovieById.fulfilled, (state,action) => {\r\n\t\t\t\tstate.status = 'idle';\r\n        if(action.payload) {\r\n          let movie = action.payload;\r\n          let found = state.movies.findIndex(m => m.id === movie.id);\r\n          if(found === -1) state.movies.push(action.payload);\r\n          else {\r\n            state.movies.splice(found, 1);\r\n            state.movies.push(movie);\r\n          }\r\n        }\r\n\t\t\t})\r\n      .addCase(fetchMovieById.rejected, (state, action) => {\r\n        state.status = 'idle';\r\n      });\r\n  },\r\n});\r\n\r\nexport const { updateSeatAvailability } = movieSlice.actions;\r\n\r\n// to select a list of movies\r\nexport const selectMovies = (state) => state.movieService.movies;\r\n// to select a movie by id from the list of movies\r\nexport const selectMovie  = (movieId) => (state) => state.movieService.movies.find( movie => movie.id === movieId);\r\n// to select async state\r\nexport const selectMovieStatus = (state) => state.movieService.status;\r\n\r\nexport default movieSlice.reducer;\r\n","import classNames from \"classnames\";\r\nimport { useEffect } from \"react\";\r\nimport MovieCard from \"../MovieCard\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n\tselectMovies,\r\n\tfetchAllMovies,\r\n\tselectMovieStatus\r\n} from '../../redux/movieSlice';\r\nimport {\r\n\terror,\r\n\tinfo\r\n} from '../../redux/noticeSlice';\r\n\r\n/**\r\n * A page to display a list of movies\r\n */\r\nexport default function MovieList (props) {\r\n\r\n\tconst {\r\n\t\tclassName,\r\n\t\tstyle\r\n\t} = props;\r\n\r\n\tconst movies = useSelector(selectMovies);\r\n\tconst status = useSelector(selectMovieStatus);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst rootCls = classNames( \"grid gap-4 grid-cols-1 lg:grid-cols-2\", className);\r\n\r\n\tuseEffect(function(){\r\n\t\tdispatch(fetchAllMovies())\r\n\t\t.unwrap()\r\n\t\t.then(m => {\r\n\t\t\t// Free tier of heroku shunt down instance after idle for some time. \r\n\t\t\t//So the application might start up slow at the beginning.\r\n\t\t\tif(!m.length) \r\n\t\t\t\tdispatch(info({message:'Server is starting up. Please refresh the page...'}));\r\n\t\t})\r\n\t\t.catch(e => {\r\n\t\t\tdispatch(error(e))\r\n\t\t})\r\n\t},[dispatch]);\r\n\r\n\treturn (\r\n\t\t<div className={rootCls} style={style}>\r\n\t\t\t{\r\n\t\t\t\tstatus === 'loading' &&\r\n\t\t\t\t<div>loading...</div>\r\n\t\t\t}\r\n\t\t\t{ status !== 'loading' && movies.map( (movie) => <MovieCard key={movie.id} movie={movie}></MovieCard> ) }\r\n\t\t</div>\r\n\t);\r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { \r\n  bookTickets,\r\n  getUserTickets\r\n} from '../api';\r\n\r\n// try to get user from sessionStorage\r\n// No authentication is implemented in this app, so user are created dynamically and store in sessionStorage\r\nconst user = sessionStorage.getItem('user');\r\nconst initialState = {\r\n\tdetails: user ? JSON.parse(user) : null, // an object to represent user \r\n  tickets: [], // list of tickets by user\r\n  status: 'idle', // status of user async actions\r\n  loaded: false // to check if \r\n};\r\n\r\n// An async action to book tickets for user\r\nexport const userBookTickets = createAsyncThunk(\r\n  'userService/bookTickets',\r\n  async ({movieId, slotId, userId, seatIds}, {dispatch}) => {\r\n    try {\r\n      const tickets = await bookTickets(movieId, slotId, userId, seatIds);  \r\n      return tickets; \r\n    } catch (error){\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n);\r\n\r\n// An async action to get all previously booked tickets for user\r\nexport const getTickets = createAsyncThunk(\r\n  'userService/getTickets',\r\n  async (userId, {dispatch}) => {\r\n    try {\r\n      const tickets = await getUserTickets(userId);\r\n      return tickets;\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n);\r\n\r\n// This handle user state and actions\r\nexport const userSlice = createSlice({\r\n  name: 'userService',\r\n  initialState,\r\n  reducers: {\r\n    // sign in user action\r\n    signIn: (state) => {\r\n\r\n\t\t\tlet user = {\r\n\t\t\t\tid: \"abc\"\r\n\t\t\t};\r\n\t\r\n\t\t\tsessionStorage.setItem('user', JSON.stringify(user));\r\n\r\n\t\t\tstate.details = user;\r\n    },\r\n    // sign out user action\r\n    signOut: (state) => {\r\n\t\t\t\r\n\t\t\tsessionStorage.clear();\r\n\r\n\t\t\tstate.details = null;\r\n    },\r\n    // enlist user's tickets\r\n    addTickets: (state, action) => {\r\n      const tickets = action.payload;\r\n      for(const ticket of tickets){\r\n        state.tickets.push(ticket);\r\n      }\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(userBookTickets.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(userBookTickets.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.tickets.push(...action.payload);\r\n      })\r\n      .addCase(userBookTickets.rejected, (state, action) => {\r\n        state.status = 'idle';\r\n      })\r\n      .addCase(getTickets.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(getTickets.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.loaded = true;\r\n        const tickets = action.payload;\r\n        for(const ticket of tickets){\r\n          if(!state.tickets.find(t => t.id === ticket.id)){\r\n            state.tickets.push(ticket);\r\n          }\r\n        }  \r\n      });\r\n  },\r\n});\r\n\r\nexport const { signIn, signOut, addTickets } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.details;\r\nexport const selectUserTickets = (state) => state.user.tickets;\r\nexport const selectStatus = (state) => state.user.status;\r\nexport const selectIsLoaded = (state) => state.user.loaded;\r\n\r\nexport default userSlice.reducer;","import classNames from \"classnames\";\r\nimport { useState } from \"react\";\r\nimport 'boxicons';\r\nimport { \r\n\tuseHistory,\r\n\tuseLocation \r\n} from \"react-router-dom\";\r\nimport {\r\n\tsignIn,\r\n\tsignOut,\r\n\tselectUser\r\n} from \"../../redux/userSlice\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n/**\r\n * Component to handle user who has sign in.\r\n */\r\nconst LoggedInUser = function(){\r\n\r\n\tlet { pathname } = useLocation();\r\n\tlet history = useHistory();\r\n\tconst dispatch = useDispatch();\r\n\tlet [showMenu, setShowMenu] = useState(false);\r\n\r\n\tconst menuCls = classNames(\"absolute w-40 bg-white right-0 shadow-md p-2 group-hover:block\", {\r\n\t\thidden: !showMenu\r\n\t});\r\n\r\n\t/**\r\n\t * Event handler to toggle visibility of user dropdown menu\r\n\t */\r\n\tconst handleToggleMenu = function(){\r\n\t\tsetShowMenu(!showMenu);\r\n\t}\r\n\r\n\t/**\r\n\t * Event handler when user clik to vie 'My Tickets'\r\n\t */\r\n\tconst goMyTicket = function(){\r\n\t\thistory.push(\"/tickets\");\r\n\t}\r\n\r\n\t/**\r\n\t * Event handling to simulate user sign out by removing sessionStorage\r\n\t */\r\n\tconst handleSignOut = function(){\r\n\t\tdispatch(signOut());\r\n\r\n\t\t// direct to home page if user is currently at tickets page\r\n\t\tif(pathname === '/tickets'){\r\n\t\t\thistory.push('/');\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"group relative\">\r\n\t\t\t<button className=\"flex items-center\" onClick={handleToggleMenu}> \r\n\t\t\t\t<span className=\"hidden md:inline-block\"> Welcome back! </span> \r\n\t\t\t\t<div \r\n\t\t\t\t\tclassName=\"rounded-full h-10 w-10 flex items-center justify-center bg-blue-200 ml-2\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<box-icon name='user' color=\"white\"></box-icon>\r\n\t\t\t\t</div>\r\n\t\t\t</button>\r\n\t\t\t<ul className={menuCls}>\r\n\t\t\t\t<li className=\"px-3 py-2\">\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName=\"flex items-center justify-between\"\r\n\t\t\t\t\t\tonClick={goMyTicket}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<box-icon name='barcode'></box-icon>\r\n\t\t\t\t\t\t<span className=\"ml-2\">My Tickets</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className=\"px-3 py-2 hower:bg-gray-100\">\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName=\"flex items-center justify-between \"\r\n\t\t\t\t\t\tonClick={handleSignOut}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<box-icon name='log-out'></box-icon>\r\n\t\t\t\t\t\t<span className=\"ml-2 flex-grow\">Sign Out</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n/**\r\n * handle user who has not sign in.\r\n */\r\nconst SignInUser = function(){\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\t/**\r\n\t\t*  Event handling to simulate user login by randomly create user with sessionStorage\r\n\t\t*/\r\n\tconst handleSignIn = function(){\r\n\t\tdispatch(signIn());\r\n\t}\r\n\r\n\treturn (\r\n\t\t<button className=\"flex items-center\" onClick={handleSignIn}>\r\n\t\t\t<box-icon name='log-in'></box-icon>\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\n/**\r\n * To handle user operation and UI\r\n */\r\nexport default function User (props) {\r\n\r\n\tconst {\r\n\t\tclassName,\r\n\t\tstyle\r\n\t} = props;\r\n\r\n\t// User state\r\n\tlet user = useSelector(selectUser);\r\n\r\n\tconst rootCls = classNames( className );\r\n\r\n\treturn (\r\n\t\t<div \r\n\t\t\tclassName={rootCls}\r\n\t\t\tstyle={style}\r\n\t\t>\r\n\t\t\t{!user ? <SignInUser></SignInUser> : <LoggedInUser></LoggedInUser>}\r\n\t\t</div>\r\n\t)\r\n}","import Styled from \"./Seat.module.css\";\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * UI component Seat - to represent a seat in theater\r\n */\r\nexport default function Seat (props){\r\n\r\n\tconst {\r\n\t\tchildren,\r\n\t\tselected,\t// seat is selected\r\n\t\tdisabled, // seat is disabled\r\n\t\tonToggle, // toggle state of seat \r\n\t} = props;\r\n\r\n\tconst rootCls = classNames(\"h-12 md:h-16 lg:h-24 flex justify-center items-center rounded-md\", \r\n\t\tdisabled ? \"bg-gray-300 cursor-default\" : \"bg-white cursor-pointer\", {\r\n\t\t[Styled.selected]: selected && !disabled,\r\n\t\t[Styled.available]: !selected,\r\n\t});\r\n\r\n\t/**\r\n\t * Event handler to triggle when seat is click \r\n\t * @param {Event} e \r\n\t * @returns \r\n\t */\r\n\tconst handleToggle = function(e){\r\n\t\t// callback onToggle if it is not disabled\r\n\t\treturn disabled ? e.stopPropagation : onToggle(e);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div \r\n\t\t\tclassName={rootCls} \r\n\t\t\tonClick={handleToggle}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\r\nSeat.propTypes = {\r\n\tselected: PropTypes.bool,\r\n\tdisabled: PropTypes.bool,\r\n\tonToggle: PropTypes.func\r\n};","import classNames from \"classnames\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport Paper from \"../Paper\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n\tselectMovie,\r\n\tfetchMovieById,\r\n\tselectMovieStatus,\r\n\tupdateSeatAvailability\r\n} from '../../redux/movieSlice';\r\nimport {\r\n\terror,\r\n} from '../../redux/noticeSlice';\r\nimport {\r\n\tselectUser,\r\n\tuserBookTickets,\r\n\tselectStatus\r\n} from '../../redux/userSlice';\r\nimport MovieCard from \"../MovieCard\";\r\nimport Seat from './Seat';\r\n\r\n/*\r\n * A page to facilitate ticket booking process for a selected movie by id\r\n */\r\nexport default function MovieTheater (props) {\r\n\r\n\tconst { movieId } = useParams(); \r\n\tconst dispatch = useDispatch();\r\n\tconst user = useSelector(selectUser);\t// current user\r\n\tconst movie = useSelector(selectMovie(movieId)); // movie details\r\n\tconst status = useSelector(selectMovieStatus);\r\n\tconst userStatus = useSelector(selectStatus);\r\n\tconst [seatSelected, setSeatSelected] = useState([]);\r\n\tconst [dateSelected, setDateSelected] = useState(\"\");\r\n\tconst [timeSelected, setTimeSelected] = useState(\"\");\r\n\tconst [timeOptions, setTimeOptions] = useState([]);\r\n\tconst [seatOptions, setSeatOptions] = useState([]);\r\n\tconst [total, setTotal] = useState(0); // total cost of selected tickets\r\n\tconst slots = movie ? movie.slots.reduce((acc,slot) => {\r\n\t\tlet date = slot.date;\r\n\t\tif( !(date in acc) ){\r\n\t\t\tacc[date] = {};\r\n\t\t} \r\n\t\tacc[date][slot.endTime] = slot\r\n\t\treturn acc;\r\n\t},{}) : {};\r\n\t\r\n\tuseEffect(() => {\r\n\r\n\t\t// fetch movie by id\r\n\t\tdispatch(fetchMovieById({movieId}))\r\n\t\t.unwrap()\r\n\t\t.catch(err => dispatch(error(err)));\r\n\t\r\n\t\tlet dates = Object.keys(slots);\r\n\t\tif(dates.length){\r\n\t\t\t// select the first date\r\n\t\t\tlet dateSelected = dates[0];\r\n\t\t\tsetDateSelected(dateSelected);\r\n\t\t\t\r\n\t\t\t// prepare time options\r\n\t\t\tlet slot = slots[dateSelected];\r\n\t\t\tlet times = Object.keys(slot).map(time => ({id: slot[time].id, time: time}));\r\n\t\t\tsetTimeOptions(times);\r\n\r\n\t\t\tif(times.length) {\r\n\t\t\t\t// selet the first time slot\r\n\t\t\t\tlet timeToSelect = times[0].id;\r\n\t\t\t\tsetTimeSelected(timeToSelect);\r\n\t\t\t\t\r\n\t\t\t\t// prepare seats options for the selected date and time\r\n\t\t\t\tlet selectedSlot = movie.slots.find(_slot => _slot.id === timeToSelect);\r\n\t\t\t\tlet seats = selectedSlot.seats;\r\n\t\t\t\tsetSeatOptions(seats)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}, [movie]);\r\n\r\n\tconst proceedBtnCls = classNames(\r\n\t\t'mt-3 border rounded  text-white p-2 text-lg font-medium',\r\n\t\t!seatSelected.length || !user || userStatus === 'loading'? 'bg-gray-300' : 'bg-green-400'\r\n\t);\r\n\r\n\tconst loginReminderCls = classNames(\r\n\t\t\"text-right text-blue-500\",\r\n\t\t{\r\n\t\t\thidden: user \r\n\t\t}\r\n\t);\r\n\r\n\tconst subTitleCls = classNames(\r\n\t\t'text-md', 'font-medium'\r\n\t)\r\n\r\n\t/**\r\n\t * Event handling of toggling seat selection\r\n\t * \r\n\t * @param {Event} e \r\n\t * @param {string} id seat id \r\n\t */\r\n\tconst handleSeatToggle = function(e, seat){\r\n\r\n\t\tconst { id } = seat; \r\n\t\tconst found = seatSelected.indexOf(id);\r\n\r\n\t\tif(found === -1){\r\n\t\t\t// select a seat\r\n\t\t\tsetSeatSelected([...seatSelected, id]);\r\n\t\t\tsetTotal(total + seat.price);\r\n\t\t} else {\r\n\t\t\t// unselect a seat\r\n\t\t\tseatSelected.splice(found,1);\r\n\t\t\tsetSeatSelected([...seatSelected]);\r\n\t\t\tsetTotal(total - seat.price);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Event handling of seat(s) booking\r\n\t * @param {Event} e \r\n\t */\r\n\tconst handleSeatBooking = function(){\r\n\r\n\t\tlet args = {\r\n\t\t\tmovieId: movieId,\r\n\t\t\tslotId: timeSelected,\r\n\t\t\tuserId: user.id,\r\n\t\t\tseatIds: seatSelected\r\n\t\t};\r\n\r\n\t\tdispatch(userBookTickets(args))\r\n\t\t.unwrap()\r\n\t\t.then(tickets => {\r\n\t\t\t// update seat(s) availability\r\n\t\t\tdispatch(updateSeatAvailability(tickets));\t\r\n\t\t\talert('Ticket successfully booked!');\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tdispatch(error(err));\r\n\t\t\t// to update seat availability\r\n\t\t\tdispatch(fetchMovieById({movieId, refresh: true}))\r\n\t\t}).finally(() => {\r\n\t\t\t// clear selected seats\r\n\t\t\tsetSeatSelected([]);\r\n\t\t\t// clear total\r\n\t\t\tsetTotal(0);\r\n\t\t});\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div> \r\n\t\t\t{ \r\n\t\t\t\t!movie && status === 'loading' && \r\n\t\t\t\t<div> loading... </div>\r\n\t\t\t}\r\n\t\t\t{ movie && \r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"flex\">\r\n\t\t\t\t\t\t<MovieCard className=\"hidden md:flex flex-grow\" movie={movie}></MovieCard>\r\n\t\t\t\t\t\t<Paper className=\"flex-col p-5 md:w-96 w-full\" elevation={1}>\r\n\t\t\t\t\t\t\t<div className=\"w-full mb-2\">\r\n\t\t\t\t\t\t\t\t<span className=\"text-gray-900 font-bold text-xl\">{movie.title}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"flex flex-col w-full mb-2\">\r\n\t\t\t\t\t\t\t\t<span className={subTitleCls}>DATE:</span> \r\n\t\t\t\t\t\t\t\t<select onChange={(e) => setDateSelected(e.target.value)} value={dateSelected}>\r\n\t\t\t\t\t\t\t\t\t<option value=\"\" disabled>select a date</option>\r\n\t\t\t\t\t\t\t\t\t{Object.keys(slots).map(date => <option value={date} key={date}>{date}</option>)}\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"flex flex-col w-full mb-2\">\r\n\t\t\t\t\t\t\t\t<span className={subTitleCls}>TIME:</span> \r\n\t\t\t\t\t\t\t\t<select onChange={(e) => setTimeSelected(e.target.value)} value={timeSelected}>\r\n\t\t\t\t\t\t\t\t\t<option value=\"\" disabled>select a time</option>\r\n\t\t\t\t\t\t\t\t\t{timeOptions.map(opt => <option value={opt.id} key={opt.id}>{opt.time}</option>)}\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"flex flex-row w-full mb-2 justify-between\">\r\n\t\t\t\t\t\t\t\t<div className={subTitleCls}> {seatSelected.length} tickets</div>\r\n\t\t\t\t\t\t\t\t<div className={subTitleCls}> SGD {total}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"flex flex-col w-full\">\r\n\t\t\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\t\t\tclassName={proceedBtnCls} \r\n\t\t\t\t\t\t\t\t\tonClick={handleSeatBooking}\r\n\t\t\t\t\t\t\t\t\tdisabled={!seatSelected.length || !user || userStatus === 'loading'}\r\n\t\t\t\t\t\t\t\t>Book Now</button>\r\n\t\t\t\t\t\t\t\t<div className={loginReminderCls}>Please login to proceed.</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"flex justify-center border my-2 bg-white\"> screen</div>\r\n\t\t\t\t\t<div className=\"grid grid-cols-8 gap-1 md:gap-2 lg:gap-4\">\r\n\t\t\t\t\t\t{seatOptions.map(s => \r\n\t\t\t\t\t\t\t<Seat key={s.id} \r\n\t\t\t\t\t\t\t\tonToggle={(e) => handleSeatToggle(e,s)} \r\n\t\t\t\t\t\t\t\tselected={seatSelected.indexOf(s.id) !== -1}\r\n\t\t\t\t\t\t\t\tdisabled={!s.availability}\r\n\t\t\t\t\t\t\t>{s.number}</Seat>)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}","import { useEffect } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport Card from \"../Card\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n\tselectUser,\r\n\tselectStatus,\r\n\tselectIsLoaded,\r\n\tselectUserTickets,\r\n\tgetTickets\r\n} from '../../redux/userSlice';\r\nimport {\r\n\terror,\r\n\tdismissError\r\n} from '../../redux/noticeSlice';\r\n\r\n/**\r\n * A page to display user's tickets\r\n */\r\nexport default function TicketList (props) {\r\n\r\n\tconst {\r\n\t\tclassName,\r\n\t\tstyle\r\n\t} = props;\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst tickets = useSelector(selectUserTickets);\r\n\tconst user = useSelector(selectUser);\r\n\tconst status = useSelector(selectStatus);\r\n\tconst loaded = useSelector(selectIsLoaded);\r\n\r\n\tuseEffect(() => {\r\n\t\t// to get all user tickets for only one time\r\n\t\tif(!loaded && user) {\r\n\t\t\tdispatch(dismissError());\r\n\t\t\tdispatch(getTickets(user.id));\r\n\t\t}\r\n\t\tif(!user){\r\n\t\t\tdispatch(error({ message: 'Please login to view tickets'}));\r\n\t\t} \r\n\t}, [user,dispatch]);\r\n\r\n\tconst rootCls = classNames( \"grid gap-4 grid-cols-1 lg:grid-cols-3 md:grid-cols-2\", className );\r\n\r\n\treturn (\r\n\t\t<div \r\n\t\t\tclassName={rootCls}\r\n\t\t\tstyle={style}\r\n\t\t>\r\n\t\t\t{ status === 'loading' && <div>loading...</div>}\r\n\t\t\t{ status === 'idle' && user && !tickets.length && <div>No ticket available</div>}\r\n\t\t\t{ \r\n\t\t\t\tstatus === 'idle' && \r\n\t\t\t\ttickets.map( ticket => \r\n\t\t\t\t\t<Card key={ticket.id} elevation={2} imageUrl={ticket.movie.poster}>\r\n\t\t\t\t\t\t<div className=\"flex flex-col p-2 w-full\">\r\n\t\t\t\t\t\t\t<div className=\"font-bold text-lg\">{ticket.movie.title}</div> \r\n\t\t\t\t\t\t\t<div className=\"text-gray-700 text-lg\">{ticket.slot.date}</div> \r\n\t\t\t\t\t\t\t<div className=\"mb-5 text-gray-700 text-lg\">{ticket.slot.startTime}</div>\r\n\t\t\t\t\t\t\t<div className=\"text-right font-bold text-xl text-blue-700\">Hall {ticket.slot.hall} Seat {ticket.seat.number}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Card>\t\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}","import React, {Suspense} from 'react';\nimport {\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport AppBar from './components/AppBar';\nimport MovieList from './components/MovieList';\nimport User from './components/User';\nimport MovieTheater from './components/MovieTheater';\nimport TicketList from './components/TicketList';\n\nconst Notice = React.lazy(() => import('./components/Notice'));\n\n/**\n * Simple Logo\n */\nconst Logo = function () {\n  return (\n    <>\n      <span className=\"font-bold text-3xl text-blue-700\">OCB</span>\n      <span className=\"text-3xl text-blue-500\">Cinema</span>\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"bg-gray-100 h-screen\">\n      <AppBar elevation={3}>\n        <div className=\"flex-grow\">\n          <Link to=\"/\"><Logo></Logo></Link>\n        </div>\n        <User></User>\n      </AppBar>\n      <div className=\"p-3\">\n        <Suspense fallback={<div></div>}>\n          <Notice></Notice>\n        </Suspense>\n        <Switch>\n          <Route path=\"/movie/:movieId\">\n            <MovieTheater></MovieTheater>\n          </Route>\n          <Route path=\"/tickets\">\n            <TicketList></TicketList>\n          </Route>\n          <Route path=\"/\">\n            <MovieList></MovieList>\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from './userSlice';\nimport movieReducer from './movieSlice';\nimport noticeSlice from './noticeSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    movieService: movieReducer,\n    noticeService: noticeSlice\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport {\n  // BrowserRouter as Router\n  // use hashrouter instead of browserRouter to fix subdir issue for github page.\n  HashRouter as Router \n} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}